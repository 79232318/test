定义：用多个专门的接口，而不使用单一的总接口，客户端不应该依赖它不需要的接口

一个类对一个类的依赖应该建立在最小的接口上

建立单一接口，不要建立庞大臃肿的接口尽量细化接口，接口中的方法尽量少

尽量细化接口，接口中的方法尽量少

注意适度原则，一定要适度

优点：符合我们常说的高内聚低耦合的设计思想从而使得类具有很好的可读性、可扩展性和可维护性。

比如说 一个接口中定义了eat() fly() swim()
狗继承了这个接口 但是多了一个fly()
猫头鹰记录了这个接口 但是多一个swim()
它们都要空实现

如果要符合接口隔离原则,需要为fly(0 eat()
和 swim() eat() 或者 为fly() eat() swim()分别定义一个接口

但是一定要适度适度 差不多细化就行了 否则会导致接口过多 反而增大开发难度
