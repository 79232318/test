总结一下就是：ThreadLocal 可以让同一个线程中上下文之间数据共享

在上面章节 二、你熟悉的场景 其实介绍了很多现有场景。那么我这边具体的实战场景是什么？

简单的例子：
	适用满足这两个条件的场景：1.每个线程独有的一些信息，2.这些信息又会在多个方法或类中用到。

	1一个请求线程，里面有两个异步小线程，各有一个方法。分别处理 A 或 B 业务
	2一种方法是传递不可变的入参
	3另一种就是 ThreadLocal，放在 ThreadLocal 的入参，会被各个方法共享。而且多个请求线程互不影响
复杂的例子：
	一次发货操作：会根据入参，进行组件化、流程编排话。那么入参会被各个地方用到，而且有些流程组件是异步的（类似 new thread 操作的）。这时候可以定一个 XXContext 上下文